add_definitions(-DSTATICLIB)

file(GLOB_RECURSE BlockchainExplorer blockchain_explorer/*)
file(GLOB_RECURSE Config config/* CryptoNoteConfig.h)
file(GLOB_RECURSE Common common/* stream/* coin/*)
file(GLOB_RECURSE CommandLine command_line/*)
file(GLOB_RECURSE ConnectivityTool ConnectivityTool/*)
file(GLOB_RECURSE Crypto crypto/*)
file(GLOB_RECURSE CryptoNoteCrypto cryptonote/crypto/chacha.h cryptonote/crypto/crypto.h cryptonote/crypto.cpp cryptonote/crypto/hash.h cryptonote/generic-ops.h)
file(GLOB_RECURSE CryptoNoteCore cryptonote/core/* cryptonote/structures/* cryptonote/serializer/*)
file(GLOB_RECURSE CryptoNoteProtocol cryptonote/protocol/*)
file(GLOB_RECURSE daemon daemon/*)
file(GLOB_RECURSE Http http/*)
file(GLOB_RECURSE InProcessNode InProcessNode/*)
file(GLOB_RECURSE Logging logging/*)
file(GLOB_RECURSE NodeRpcProxy NodeRpcProxy/*)
file(GLOB_RECURSE P2p p2p/*)
file(GLOB_RECURSE Rpc rpc/*)
file(GLOB_RECURSE Serialization serialization/*)
file(GLOB_RECURSE SimpleWallet simplewallet/*)
if(MSVC)
file(GLOB_RECURSE System system/* platform/Windows/system/*)
elseif(APPLE)
file(GLOB_RECURSE System system/* platform/OSX/system/*)
else()
file(GLOB_RECURSE System system/* platform/Linux/system/*)
endif()
file(GLOB_RECURSE Transfers transfers/*)
file(GLOB_RECURSE Wallet wallet/*)
file(GLOB_RECURSE WalletLegacy wallet_legacy/*)

file(GLOB_RECURSE JsonRpcServer JsonRpcServer/*)

file(GLOB_RECURSE PaymentGate payment_gate/*)
file(GLOB_RECURSE PaymentGateService payment_gate_service/*)
file(GLOB_RECURSE Miner miner/*)

source_group("" FILES ${CommandLine} ${Common} ${ConnectivityTool} ${Crypto} ${CryptoNoteCore} ${CryptoNoteProtocol} ${daemon} ${JsonRpcServer} ${Http} ${Logging} ${NodeRpcProxy} ${P2p} ${Rpc} ${Serialization} ${SimpleWallet} ${System} ${Transfers} ${Wallet} ${WalletLegacy})

add_library(BlockchainExplorer ${BlockchainExplorer})
add_library(Config ${Config})
add_library(Common ${Common})
add_library(CommandLine ${CommandLine})
add_library(Crypto ${Crypto})
add_library(CryptoNoteCrypto ${CryptoNoteCrypto})
add_library(CryptoNoteCore ${CryptoNoteCore})
add_library(Http ${Http})
add_library(InProcessNode ${InProcessNode})
add_library(Logging ${Logging})
add_library(NodeRpcProxy ${NodeRpcProxy})
add_library(Rpc ${Rpc})
add_library(P2P ${CryptoNoteCore} ${CryptoNoteProtocol} ${P2p})
add_library(Serialization ${Serialization})
add_library(System ${System})
add_library(Transfers ${Transfers})
add_library(Wallet ${Wallet} ${WalletLegacy})
add_library(PaymentGate ${PaymentGate})
add_library(JsonRpcServer ${JsonRpcServer})

add_executable(ConnectivityTool ${ConnectivityTool})
add_executable(daemon ${daemon})
add_executable(SimpleWallet ${SimpleWallet})
add_executable(PaymentGateService ${PaymentGateService})
add_executable(Miner ${Miner})

if (MSVC)
  target_link_libraries(System ws2_32)
endif ()

target_link_libraries(ConnectivityTool CryptoNoteCore CommandLine Logging CryptoNoteCrypto Crypto P2P Rpc Http Serialization Common System Config ${Boost_LIBRARIES})
target_link_libraries(daemon Rpc CryptoNoteCore P2P Serialization System Http CommandLine Logging Common CryptoNoteCrypto Crypto upnpc-static BlockchainExplorer Config ${Boost_LIBRARIES})
target_link_libraries(SimpleWallet Wallet NodeRpcProxy Transfers Rpc Http CryptoNoteCore Serialization BlockchainExplorer System CommandLine Logging Common CryptoNoteCrypto Crypto Config ${Boost_LIBRARIES})
target_link_libraries(PaymentGateService PaymentGate JsonRpcServer Wallet NodeRpcProxy Transfers CryptoNoteCore CryptoNoteCrypto Crypto P2P Rpc Http Serialization System CommandLine Logging Common InProcessNode upnpc-static BlockchainExplorer Config ${Boost_LIBRARIES})
target_link_libraries(Miner CryptoNoteCore BlockchainExplorer Rpc Serialization System Http CommandLine Logging Common CryptoNoteCrypto Crypto Config ${Boost_LIBRARIES})

add_dependencies(Rpc version)

add_dependencies(ConnectivityTool version)
add_dependencies(daemon version)
add_dependencies(SimpleWallet version)
add_dependencies(PaymentGateService version)
add_dependencies(P2P version)

set_property(TARGET ConnectivityTool PROPERTY OUTPUT_NAME "connectivity_tool")
set_property(TARGET SimpleWallet PROPERTY OUTPUT_NAME "simplewallet")
set_property(TARGET PaymentGateService PROPERTY OUTPUT_NAME "walletd")
set_property(TARGET Miner PROPERTY OUTPUT_NAME "miner")
#TODO Specify the name of daemon for your currency
set_property(TARGET daemon PROPERTY OUTPUT_NAME "vigcoind")
